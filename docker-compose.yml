
services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: on-failure
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  web:
    build: .
    container_name: django_web
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    command: >
      sh -c " python manage.py makemigrations &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    links:
      - db
      - redis

  redis:
    image: redis:latest
    container_name: redis_broker
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build: .
    container_name: celery_worker
    command: celery -A partyShop worker --loglevel=info
    depends_on:
      - redis
    env_file:
      - .env
    volumes:
      - ./:/app

  celery-beat:
    build:
      context: .
    command: celery -A partyShop beat -l info
    depends_on:
      - redis
      - web

  flower:
    image: mher/flower
    container_name: flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery  # Match with celery service name

  
volumes:
  mysql_data:
  redis_data:
